version: '3.1'

services:
  helios:
    container_name: helios-app
    build: ./django
    image: helios-server
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ../:/app
      - pip-cache:/root/.cache
    environment:
      DB_HOST: 'db'
      DB_PASSWORD: 'example'
      DB_USER: 'postgres'
    depends_on:
      - db
    links:
      - db:postgres
  
  api:
    container_name: helios-api
    build: ./django
    image: helios-server
    restart: always
    ports:
      - "3000:8000"
    environment:
      API: 'true'
      DB_HOST: 'db'
      DB_PASSWORD: 'example'
      DB_USER: 'postgres'
    volumes:
      - ../:/app
      - pip-cache:/root/.cache
      - vscode:/root/.vscode-server
  
  celery:
    container_name: helios-celery
    build: ./django
    image: helios-server
    environment:
      CELERY: 'true'
      DB_HOST: 'db'
      DB_PASSWORD: 'example'
      DB_USER: 'postgres'
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      EMAIL_USE_SSL: ${EMAIL_USE_SSL}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL}
    volumes:
      - ../:/app
      - pip-cache:/root/.cache
    depends_on:
      - redis

  redis:
    container_name: helios-redis
    image: "redis:alpine"

  db:
    container_name: helios-db
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example
    volumes:
      - ./postgres/scripts:/docker-entrypoint-initdb.d

volumes:
  pip-cache:
  vscode:
